[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  # debug = false
  # quiet = false
  # logtarget = "file"
  # logfile = ""
  # logfile_rotation_interval = "0d"
  # logfile_rotation_max_size = "0MB"
  # logfile_rotation_max_archives = 5
  hostname = ""
  omit_hostname = false


# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  urls = ["http://influx:8086"]

  database = "telegraf"
  # exclude_database_tag = false
  # skip_database_creation = false

  # retention_policy = ""

  # write_consistency = "any"

  # timeout = "5s"

  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"

  # user_agent = "telegraf"

  # udp_payload = "512B"

  # content_encoding = "gzip"


#[[outputs.health]]
#  service_address = "http://:8080"
#  read_timeout = "5s"
#  write_timeout = "5s"
#
#  # basic_username = "user1"
#  # basic_password = "secret"
#
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

#[[inputs.disk]]
#  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

#[[inputs.diskio]]

#[[inputs.kernel]]

#[[inputs.mem]]

#[[inputs.processes]]

#[[inputs.swap]]

#[[inputs.internal]]
#  # collect_memstats = true

[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]

  topics = [
    "leds",
  ]

  topic_tag = "topic"
  qos = 0
  connection_timeout = "30s"

  ## Maximum messages to read from the broker that have not been written by an
  ## output.  For best throughput set based on the number of metrics within
  ## each message and the size of the output's metric_batch_size.
  ##
  ## For example, if each message from the queue contains 10 metrics and the
  ## output metric_batch_size is 1000, setting this to 100 will ensure that a
  ## full batch is collected and the write is triggered immediately without
  ## waiting until the next flush_interval.
  # max_undelivered_messages = 1000

  ## Persistent session disables clearing of the client session on connection.
  ## In order for this option to work you must also set client_id to identify
  ## the client.  To receive messages that arrived while the client is offline,
  ## also set the qos option to 1 or 2 and don't forget to also set the QoS when
  ## publishing.
  # persistent_session = false

  client_id = "telegraf"

  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"

  data_format = "json"
  data_type = "string"

  tag_keys = [
    "color",
    "num"
  ]
  #json_time_key = "date"
  #json_time_format = "unix_ms"

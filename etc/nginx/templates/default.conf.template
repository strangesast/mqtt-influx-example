server {
  listen ${NGINX_PORT};
  server_name _;

  gzip on;
  gzip_vary on;
  gzip_min_length 1000;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;

  absolute_redirect off;

  root /usr/share/nginx/html;

  location = /api {
    return 301 $scheme://$http_host$request_uri/;
  }

  location /api/ {
    proxy_pass http://${SERVER_HOST}:${SERVER_PORT}/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  location /influx/ {
    proxy_pass http://influx:8086;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_max_temp_file_size 10m;
    proxy_connect_timeout 20;
    proxy_send_timeout 20;
    proxy_read_timeout 20;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection keep-alive;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto http;
    proxy_set_header X-Original-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Original-Proto https;
    proxy_cache_bypass $http_upgrade;
  }

  location / {
    gzip_static on;
    index index.html;
    try_files $uri $uri/ /index.html;
  }
}
